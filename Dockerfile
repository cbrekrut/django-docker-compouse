# ─────────────────────────────────────────────────────────────────────────────
# 1) Берём лёгкий Alpine + устанавливаем зависимости
# ─────────────────────────────────────────────────────────────────────────────
FROM python:3.11-alpine

# Логи Django без буферизации (рекомендуется)
ENV PYTHONUNBUFFERED=1

# Устанавливаем нужные пакеты (для работы psycopg2, Pillow, и т. д.):
RUN apk update && \
    apk add --no-cache gcc musl-dev libffi-dev jpeg-dev zlib-dev postgresql-dev

# ─────────────────────────────────────────────────────────────────────────────
# 2) Создаём пользователя для непривилегированного запуска
# ─────────────────────────────────────────────────────────────────────────────
RUN addgroup -S appuser && adduser -S appuser -G appuser

# ─────────────────────────────────────────────────────────────────────────────
# 3) Устанавливаем зависимости Python
# ─────────────────────────────────────────────────────────────────────────────
# Сначала создаём папку /app (где будет лежать всё приложение)
WORKDIR /app

# Копируем файл с зависимостями из корня (тот, что рядом с этим Dockerfile)
COPY requirements.txt /app/requirements.txt

# Устанавливаем через pip все, что в requirements.txt
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r /app/requirements.txt

# ─────────────────────────────────────────────────────────────────────────────
# 4) Копируем весь исходный код проекта в /app
# ─────────────────────────────────────────────────────────────────────────────
COPY . /app

# Делаем скрипт entrypoint.sh исполняемым
RUN chmod +x /app/entrypoint.sh

# Меняем владельца /app на непривилегированного пользователя и переключаемся на него
RUN chown -R appuser:appuser /app
USER appuser

# ─────────────────────────────────────────────────────────────────────────────
# 5) Прописываем рабочую директорию так, чтобы manage.py оказался в корне этой папки
# ─────────────────────────────────────────────────────────────────────────────
# Поскольку manage.py лежит в /app/ScreenBook/manage.py, сделаем WORKDIR равным этой директории:
WORKDIR /app/ScreenBook

# Открываем порт, на котором будет слушать Gunicorn
EXPOSE 8000

# При старте контейнера сразу запускаем entrypoint.sh
ENTRYPOINT ["/app/entrypoint.sh"]
